    //A binary tree Node
    /*class Node
    {
        public int data;
        public Node left;
        public Node right;

        public Node(int key)
        {
            this.data = key;
            this.left = null;
            this.right = null;
        }
    }*/
    
    //we should limit the user with the amount of notes to be added to the list if it's just DLL class by itself
    class DoublyLinkedListNode
    {
        public int data;
        public Node head;
        public Node tail;
        
        public DoublyLinkedListNode(int data, Node head, Node tail)
        {
            this.data = data;
            this.head = head;
            this.tail = tail;
        }
    }
    
    class Solution
    {
        //Function to convert binary tree to doubly linked list and return it.
        public List<Node> bToDLL(Node root)
        {
            List<DoublyLinkedListNode> dll = new List<DoublyLinkedListNode>();
            
            if(root != null) {
                //add node to dll
                while(root.right != null ) {
                    DoublyLinkedListNode newNode = new DoublyLinkedListNode(root.data, root.left, root.right);
                    dll.Add(newNode);
                    root = root.right;
                }
            }
            return dll;
        }
    }

}