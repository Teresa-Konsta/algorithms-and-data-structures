/** C#
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public bool HasCycle(ListNode head) {
        HashSet<ListNode> viewed = new HashSet<ListNode>();
        if(head != null || head.next != null) {
            while(head != null) {
                if(viewed.Contains(head)) {
                    return true;
                } else {
                    viewed.Add(head);
                    head = head.next;
                }
            }
        }

        return false;
    }
}