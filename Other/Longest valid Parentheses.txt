using System.Collections.Generic;

class Solution
{
    /* if there is a set of different brackets
    public char findPairSymbol(char incomingChar) {
        Dictionary<char, char> symbol = new Dictionary<char, char>();
        symbol.Add('(', ')');
        symbol.Add('{', '}');
        symbol.Add('[', ']');
        
        char pair = symbol[incomingChar)];
        return pair;
    }*/
    
    public int maxLength(string S)
    {
        char[] stringChars = S.ToCharArray();
        char pair1 = '(';
        char pair2 = ')';
        List<char> brakets1 = new List<char>();
        List<char> brakets2 = new List<char>();

	    for(int i=0; i<stringChars.Length; i++) {
	        if(stringChars[i] == pair1) {
	            brakets1.Add(stringChars[i]);
	        } else {
	            brakets2.Add(stringChars[i]);
	        }
	    }
	    
	    if(brakets1.Count > brakets2.Count) {
	        return brakets2.Count*2;
	    } else if(brakets2.Count > brakets1.Count) {
	        return brakets1.Count*2;
	    } else {
	        return 0;
	    }
    }
}